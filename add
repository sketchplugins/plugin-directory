#!/usr/bin/env ruby
require 'json'
require 'octokit'

if ARGV[0].nil?
  puts "Usage: #{File.basename(__FILE__)} username/reponame"
  exit
end

IGNORE = %w(the of a and)

def titlefy string
  s = string.gsub('.sketchplugin','').gsub('-',' ').split(' ')
  s.map do |word|
    word_lowercase = word.downcase
    if IGNORE.include?(word_lowercase)
      word_lowercase
    else
      word.capitalize!
    end
  end
  s.join(' ')
end

# First, update the local repo to avoid conflicts later on
# (use git-up if it's installed)
if `which git-up`.empty?
  `git pull --rebase`
else
  `git up`
end

plugin_url = ARGV[0]

# Generate the new plugin hash
owner = plugin_url.split("/")[0]
name  = plugin_url.split("/")[1]

client = Octokit::Client.new
repo = client.repo(plugin_url)
user = client.user(owner)

new_plugin = {
  :description => repo.description,
  :name => name,
  :title => titlefy(name),
  :owner => owner,
  :author => user.name || owner,
  :lastUpdated => repo.updated_at
}

# Load the JSON file with all the plugins
file = File.read('plugins.json')
json_data = JSON.parse(file)

# make sure we're not adding an existing plugin
if json_data.select{ |item| item['name'] == name && item['owner'] == owner }.count == 0
  # Add plugin & save file
  json_data.push(new_plugin)

  File.open("plugins.json","w") do |f|
    f.write(JSON.pretty_generate(json_data, :indent => "  "))
  end
  puts "We now have #{json_data.length} plugins on the list"
  # Update README
  system("rake")
  system("git add README.md plugins.json")
  log_msg = "Added #{owner}/#{name}"
  if ARGV[1]
    log_msg += ". Closes ##{ARGV[1]}"
  end
  system("git commit -m '#{log_msg}'")
else
  puts "Plugin was already on the list"
  puts "We have #{json_data.length} plugins on the list"
end
